plugins {
    id 'org.springframework.boot' version '2.7.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
}
String springBootVersion = "2.4.0"
String jacocoVersion = "0.8.8"

group = 'com.cleancode'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

jacoco {
    toolVersion = jacocoVersion
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    implementation.exclude module: 'spring-boot-starter-tomcat'
    implementation.exclude group: 'org.apache.tomcat'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-webflux:${springBootVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'com.github.cloudyrock.mongock:mongock-bom:4.3.8'
    implementation 'com.github.cloudyrock.mongock:mongock-spring-v5:4.3.8'
    implementation group: 'com.github.cloudyrock.mongock', name: 'mongodb-springdata-v3-driver', version: '4.3.8'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.12.2'
    testImplementation 'com.github.silaev:mongodb-replica-set:0.4.3'
    testImplementation 'com.ninja-squad:springmockk:2.0.0'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test // Tests must run before generating the report
    reports {
        xml.required.set(true) // For tools like SonarQube
        csv.required.set(false)
        html.outputLocation.set(file("$buildDir/reports/jacoco"))
    }
}